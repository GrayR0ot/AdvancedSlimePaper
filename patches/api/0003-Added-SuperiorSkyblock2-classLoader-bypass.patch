From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?L=C3=A9o=20M=2E=20-=20GrayR0ot?= <thisis41@protonmail.com>
Date: Sat, 7 Sep 2024 22:56:17 +0200
Subject: [PATCH] Added SuperiorSkyblock2 classLoader bypass


diff --git a/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java b/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java
index fd4f33ea605cee201913cefdb4540de5ebeb4ede..2347feed7768b0a876a3e6c2406e8e78ccca8fb9 100644
--- a/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java
+++ b/src/main/java/org/bukkit/plugin/java/PluginClassLoader.java
@@ -2,6 +2,7 @@ package org.bukkit.plugin.java;
 
 import com.google.common.base.Preconditions;
 import com.google.common.io.ByteStreams;
+
 import java.io.File;
 import java.io.IOException;
 import java.io.InputStream;
@@ -12,16 +13,13 @@ import java.net.URL;
 import java.net.URLClassLoader;
 import java.security.CodeSigner;
 import java.security.CodeSource;
-import java.util.Collection;
-import java.util.Collections;
-import java.util.Enumeration;
-import java.util.Map;
-import java.util.Set;
+import java.util.*;
 import java.util.concurrent.ConcurrentHashMap;
 import java.util.jar.JarEntry;
 import java.util.jar.JarFile;
 import java.util.jar.Manifest;
 import java.util.logging.Level;
+
 import org.bukkit.plugin.InvalidPluginException;
 import org.bukkit.plugin.PluginDescriptionFile;
 import org.bukkit.plugin.SimplePluginManager;
@@ -50,13 +48,15 @@ public final class PluginClassLoader extends URLClassLoader implements io.paperm
     private io.papermc.paper.plugin.provider.classloader.PluginClassLoaderGroup classLoaderGroup; // Paper
     public io.papermc.paper.plugin.provider.entrypoint.DependencyContext dependencyContext; // Paper
 
+    public static final List<String> CLASS_LOADER_STOP_BYPASS = new ArrayList<>(List.of("SlimeWorldManager", "SuperiorSkyblock2"));
+
     static {
         ClassLoader.registerAsParallelCapable();
     }
 
     @org.jetbrains.annotations.ApiStatus.Internal // Paper
     public PluginClassLoader(@Nullable final ClassLoader parent, @NotNull final PluginDescriptionFile description, @NotNull final File dataFolder, @NotNull final File file, @Nullable ClassLoader libraryLoader, JarFile jarFile, io.papermc.paper.plugin.provider.entrypoint.DependencyContext dependencyContext) throws IOException, InvalidPluginException, MalformedURLException { // Paper - use JarFile provided by SpigotPluginProvider
-        super(file.getName(), new URL[] {file.toURI().toURL()}, parent);
+        super(file.getName(), new URL[]{file.toURI().toURL()}, parent);
         this.loader = null; // Paper - pass null into loader field
 
         this.description = description;
@@ -143,6 +143,7 @@ public final class PluginClassLoader extends URLClassLoader implements io.paperm
     public Class<?> loadClass(@NotNull String name, boolean resolve, boolean checkGlobal, boolean checkLibraries) throws ClassNotFoundException {
         return this.loadClass0(name, resolve, checkGlobal, checkLibraries);
     }
+
     @Override
     public io.papermc.paper.plugin.configuration.PluginMeta getConfiguration() {
         return this.description;
@@ -265,9 +266,9 @@ public final class PluginClassLoader extends URLClassLoader implements io.paperm
             // Paper end
             super.close();
         } finally {
-            if (this.plugin == null || !this.plugin.getName().equals("SlimeWorldManager")) { // ASWM - Don't close
-            jar.close();
-            } // ASWM - Don't close
+            if (this.plugin == null || !CLASS_LOADER_STOP_BYPASS.contains(this.plugin.getName())) {
+                jar.close();
+            }
         }
     }
 
@@ -294,10 +295,10 @@ public final class PluginClassLoader extends URLClassLoader implements io.paperm
     public String toString() {
         JavaPlugin currPlugin = plugin != null ? plugin : pluginInit;
         return "PluginClassLoader{" +
-                   "plugin=" + currPlugin +
-                   ", pluginEnabled=" + (currPlugin == null ? "uninitialized" : currPlugin.isEnabled()) +
-                   ", url=" + file +
-                   '}';
+                "plugin=" + currPlugin +
+                ", pluginEnabled=" + (currPlugin == null ? "uninitialized" : currPlugin.isEnabled()) +
+                ", url=" + file +
+                '}';
     }
 
     void setClass(@NotNull final String name, @NotNull final Class<?> clazz) {
